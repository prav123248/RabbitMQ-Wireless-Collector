Setup Process
1. Use the spring.start.io website with the config in a screenshot. 
2. Download the latest version of Erlang available at erlang.org/downloads
3. Download RabbitMQ server from the website.

Profiles : 
-Dspring.profiles.active=Controlleriver
-Dspring.profiles.active=Node

Adjust between the Controller and Node profiles depending on which aspect of the system you need.
Raspberry PI nodes should use Node. Central point like a laptop should use Controller.

In Intellij, edit configurations, add VM options and paste the -D text listed above.

Useful commands (In an ADMIN CMD)
4. cd "C:\Program Files\RabbitMQ Server\rabbitmq_server-3.11.7\sbin"
5. rabbitmq-service start/stop
6. rabbitmq-plugins enable rabbitmq_management  (Use http://localhost:15672/ to access management UI)
7. rabbitmq-server

Important points :
Make sure the RabbitMQ service is running on the central point.
RabbitMQ Server & Erlang need to be installed only on the server/central point(laptop). Only libraries needed for the Java files should be installed for the nodes (raspberry PI). 

Notes for remote commmunication :
Specify host (laptop/central point) IP address in application.properties for Sender
Make sure Reciever (laptop/central point) has incoming connections in firewall unblocked.
Make sure remote users (raspberry PIs) use the node user (or any with right permission) and not guest.
Use a different user than guest or Login will fail. Make a new user and give all permissions.

(Use bad toByteArray and switch to the good one for project report, ctrl+f approach 1/2 in Project Chat 2)

Notes for testing both Node/Controller locally :
-Dserver.port=8081
Use this in the JVM arguments to change the port from 8080 to run nodes and controllers on the same machine separately. One of the instances can use default 8080.


Raspberry PI setup process (Old) :
1. Download github repo
2. Install maven with "sudo apt-get install maven"
3. Download openjdk-17 using "sudo apt install openjdk-17-jdk"
4. Run :
"mvn exec:java -Dexec.mainClass="com.neonatal.rabbitMQCollector.RabbitMqCollectorApplication" -Dexec.args="" -Dspring.profiles.active="Node"
->Change the Node in DSpring.profiles.active to controller.
5. May need to use mvn clean compile if changes are made after first run of mvn exec 


Setup for Installing VSCapture on Raspberry PI (Using Dotnet inc Net6 and Net5): 
1. Download .Net6.0 SDK Linux Arm64 and .Net5.0 (going to explain using both as Core needs Net5)
---->You should get a tar.gz file which you extract into a folder (do for both).
---->Example path : /home/pravin/Downloads/net6dotnet and /home/pravin/Downloads/net5dotnet
2. Add the folder to the path
---->Run command "sudo nano ~/.profile"
---->Don't remove or edit existing stuff. At the bottom, add the line "export PATH=$PATH:/home/pravin/Downloads/net6dotnet" (use your path, I included my example)
---->This adds the created dotnet net6 folder to the existing path.
---->Below that line, add "export netv5=/home/pravin/Downloads/net5dotnet" (user your path for Net5)
---->We do this because the Path will select the first dotnet listed (which is our v6) so listing v5 afterwards won't mean it will be used. 
---->When you need to use v5 to build/run, instead of running dotnet, run "$netv5/dotnet <command>". This will run version 5 instead of version 6. By default, we use v6 when running dotnet.
3.Reboot the Raspberry PI with "sudo reboot" so changes take affect.
4.Open a terminal anywhere and type "dotnet", you should see text that isn't an error. (You can do dotnet --version and $netv5/dotnet --version if you want)
5.From the SourceForge files page, there are several versions of VSCapture that are either Source or Binary files.
----> Ones relevant to us are GE Datex S/5 but this works with any of them. There's Core and Wave inside GE Datex S/5.
----> Whichever you choose, download and extract everything to a folder.
----> Open a terminal in the extracted folder.
----> (Ignore this if you downloaded a Binary) Source means you have to compile and create a binary build.  
--------->To do this :
--------->Run "dotnet build ./name.sln" where name is the name of the sln file. If the build succeeds, you should have a bin folder which is the binary. CD into the bin folder until you see dll files. Follow the Binary step now. If there is no sln file and you have sproj files instead, just run "dotnet build" in that directory. (Remember that if you require net5, to use $netv5/dotnet)
----> For Binary, run "dotnet name.dll" where name is the name of the dll file.

Note - Must use USB 4 
https://sourceforge.net/p/vscapture/discussion/general/thread/4c2c225ff5/
https://sourceforge.net/p/vscapture/discussion/general/thread/4c2c225ff5/

Use Sudo with Raspberry PI command
https://sourceforge.net/p/vscapture/discussion/general/thread/3e7a8ecddc/

Setting up the MySQL server : 
1.Use MySQL installer to install the server and MySQL workbench.
2.Make a database using workbench and provide the URL in application.properties along with valid username/password
3.Run the controller

Running the MySQL server :
1. Make sure you have these configurations in application.properties : 
#Needed for only Controller database communication
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/neonatal
spring.datasource.username=root
spring.datasource.password=password
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
2. Create a separate database in MySQL workbench called neonatal with the login (make sure whatever it is matches what is in application.properties).
3. Table doesn't need to exist, that will be created by the system.


(Using the included JAR) Running the Final Program on Raspberry PI :
1. Make sure the JAR is present in "NeonatalProject/rabbitMQ-Collector/target".
2. Make sure javafx-sdk-20.0.1 from "https://gluonhq.com/products/javafx/" is in "NeonatalProject/rabbitMQ-Collector".
3.Run the command while in the "NeonatalProject/rabbitMQ-Collector" directory in the terminal:
java -Dspring.profiles.active="Node" --module-path /home/path/to/NeonatalProject/rabbitMQ-Collector/javafx-sdk-20.0.1/lib --add-modules javafx.controls -jar /home/path/to/NeonatalProject/rabbitMQ-Collector/target/rabbitMQ-Collector-0.0.1-SNAPSHOT.jar

As long as those two components exist (the JAR and the SDK), you can run the command with whatever directory as long as it is specified in the command. 



(---->Need to check if sudo-apt get install open-jfx had an impact, don't think it did. Will check when getting it working on other raspberry Pis).
(FROM SCRATCH)Running the Final Program on Raspberry PI :
Running the program on Raspberry PI is a little different now because of the added JavaFX GUI.
The JavaFX library installed by Maven is not compatible with the AARCH64 Architecture for Raspberry PI. A compatible version of the library can be found in the link below :
https://gluonhq.com/products/javafx/
1.Scroll down to Downloads on GluonHQ and download "aarch64" Linux Version 20 SDK.
2.Extract the folder into "NeonatalProject/rabbitMQ-Collector".
3.(OPTIONAL - READ BELOW) Update the POM.xml file with :
<repositories>
  <repository>
    <id>gluon-releases</id>
    <url>https://nexus.gluonhq.com/nexus/content/repositories/releases</url>
  </repository>
</repositories>

(add it to existing dependencies)
<!--
<dependencies>
  <dependency>
    <groupId>com.gluonhq</groupId>
    <artifactId>javafx-arm64</artifactId>
    <version>{VERSION}</version>
  </dependency>
</dependencies>
--!>

Reason I commented the dependency part out is because adding the dependency didn't work for me. I heard its important for certain parts of JavaFX for any updates so there may be issues in future by not including it. I didn't face any issues running without it, I actually couldn't connect to GLUON for dependencies. Including it here in case it helps you. The repositories and dependencies part is designed to ensure any libraries javafx needs will be included but for the GUI I made, there were no issues.

4. Run "mvn clean package -DskipTests". Make sure application.properties is commented out. We skip tests because without the properties defined in application.properties, it will fail. Our GUI will pass these properties during runtime so this isn't an issue.

5. The command to run will not use Maven. Instead :
java -Dspring.profiles.active="Node" --module-path /home/prav123248/Desktop/NeonatalProject/rabbitMQ-Collector/javafx-sdk-20.0.1/lib --add-modules javafx.controls -jar /home/prav123248/Desktop/NeonatalProject/rabbitMQ-Collector/target/rabbitMQ-Collector-0.0.1-SNAPSHOT.JAR

6. Replace the directories with your own correct ones in the command above. The --module-path one points to the lib folder within the extracted javafx downloaded folder. The other path is to the jar generated by "mvn clean package -DskipTests" and usually stored in target.

7. Any changes you make to the code means redoing the "mvn clean package -DskipTests" command so another jar is created.

Running CONSOLE mode without GUI on Raspberry PI :
1. Follow the above steps until running the command.
2. Uncomment the application.properties and make sure they are correct.
3. After the JAR file is specified, add any string to act as an argument.
4. If an argument is passed, the console version is used instead.
5. Inputs are a bit weird since it uses a Java Scanner. You might have to enter responses a few times even if it says it is invalid input. For example, when accepting an authentication request - you may have to type "Y" + enter a couple times until it registers on the node.
6. Haven't tested the console version since adding the GUI so not sure how functional it is. Should be fine for most functions.


Raspberry PI Login Information :

Model A with Screen : 
username 










Other GE related forum posts :
https://sourceforge.net/p/vscapture/discussion/general/thread/4756dd15/
https://sourceforge.net/p/vscapture/discussion/general/thread/c8fbf713a9/
https://sourceforge.net/p/vscapture/discussion/general/thread/3743c7e124/ (less relevant, about charts)
https://sourceforge.net/p/vscapture/discussion/general/thread/71b7c290/ (discussion of GE export)
https://sourceforge.net/p/vscapture/discussion/general/thread/c6aece91de/ (how LAN doesn't work for GE)
https://sourceforge.net/p/vscapture/discussion/general/thread/a58e9e1e71/ (Person trying to get GE expor to work)